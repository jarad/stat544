\documentclass[12pt]{article}
\usepackage{amsmath,amssymb,mathrsfs,fancyhdr,syntonly,lastpage,hyperref,enumitem,graphicx,verbatim}

\hypersetup{colorlinks=true,urlcolor=black}

\topmargin      -1.5cm   % read Lamport p.163
\oddsidemargin  -0.04cm  % read Lamport p.163
\evensidemargin -0.04cm  % same as oddsidemargin but for left-hand pages
\textwidth      16.59cm
\textheight     23.94cm
\parskip         7.2pt   % sets spacing between paragraphs
\parindent         0pt   % sets leading space for paragraphs
\pagestyle{empty}        % Uncomment if don't want page numbers
\pagestyle{fancyplain}



\begin{document}
\lhead{Homework 7}
\chead{PSTAT 544 - Bayesian statistics}
\rhead{Page \thepage\ of \pageref{LastPage}}

This homework is due on Blackboard Learn by 8:00am on 6 March 2014. There will be a total of 10 points available. 

The file {\tt radon.csv} contains observations on houses in Minnesota with the following information
\begin{itemize}
\item {\tt radon}: radon measured in pCi/L
\item {\tt floor}: the floor the observation was made on
\item {\tt county}: the county the observation was made in
\end{itemize}

<<data>>=
d = read.csv("radon.csv")
e = 0.01
d$y = log(d$radon+e)
@

Provide 95\% credible intervals for the mean radon concentration in each county (ignoring {\tt floor}) under the following models:
\begin{enumerate}
\item Common mean radon concentration in all counties.

\paragraph{Solution:}

Due to radon being positive, we will model the logarithm of radon plus 0.01 as normally distributed. For this first model, we have a common mean and variance for all observations. The model is 

\[ Y_i = \log (R_i+0.01) \stackrel{iid}{\sim} N(\mu,\sigma^2) \]

where $R_i$ is the radon measurement for observation $i$. On the original scale, the $E[R_i] = e^{\mu+\sigma^2/2}-0.01$. 

<<common_mean>>=
library(rjags)
common_mean = "
model {
  for (i in 1:n) {
    y[i] ~ dnorm(mu, 1/sigma2)
  }
  mu ~ dunif(-100,100)
  sigma2 ~ dgamma(0.001,0.001)
  mean <- exp(mu+sigma^2/2)-0.01 # Mean on the original scale
}"

dat = list(n=nrow(d), y=d$y)
m_common = jags.model(textConnection(common_mean), dat)
s_common = coda.samples(m_common, c("mu","sigma2","mean"), 1000)
@

From the plots and summary statistics below, we can see the mean radon level is between 4.7 and 5.4 with 95\% probability. 

<<common_mean_plots>>=
plot(s_common)
summary(s_common)
@


\item No relationship between mean radon concentrations in the counties, i.e. complete independence.

\paragraph{Solution:}

This model assumes that there is a different mean radon concentration in each county. In addition, I assume there is a different variance in all counties. The model is 
\[ R_i \stackrel{iid}{\sim} N(\mu_{c[i]},\sigma_{c[i]}^2) \]
where $c[i]$ is the county id for observation $i$. The mean radon level in county $i$ is $E[R_i] = e^{\mu_{c[i]}+\sigma_{c[i]}^2/2}-0.01$.


Since some of the counties have few observations, the information for the standard deviation (and the mean) in those counties will come almost entirely from the prior. We will cheat slightly here and look at the estimated variances for counties with more observations in order to construct a reasonable prior for counties with low number of observations. This approach will no longer be needed in the hierarchical model.


<<number_of_observations_per_county>>=
library(plyr)
n_county = ddply(d, .(county), summarise, n=length(y), mu=mean(y), sigma2=var(y))
n_county[order(n_county$n),][1:11,]
ddply(n_county, .(), summarise, 
      mean_mu = mean(mu), var_mu = var(mu), 
      mean_sigma2 = mean(sigma2, na.rm=TRUE), var_sigma2 = var(sigma2, na.rm=TRUE))
@

Although the idea is to not borrow information across the counties, since there are so few observations in some counties, we are obliged to create informative priors at least for these counties. So we construct the following independent priors 
\[ \mu_c \stackrel{iid}{\sim} N(m,C) \qquad \sigma^2_c \stackrel{iid}{\sim} Ga(\alpha,\beta). \]


<<prior>>=
(m = mean(n_county$mu))
(C = var(n_county$mu))

(mu = mean(n_county$sigma2, na.rm=TRUE))
(vr = var(n_county$sigma2, na.rm=TRUE))
(alpha = mu^2/vr)
(beta = mu/vr)
@

Compared with the hierachical model, one issue here is that our priors do not take into account the sample size in the various counties. 

<<independence_model>>=
independence_model = "
model {
  for (i in 1:n) {
    y[i] ~ dnorm(mu[county[i]], 1/sigma2[county[i]])
  }
  for (c in 1:nc) {
    mu[c] ~ dnorm(m,C)
    sigma2[c] ~ dgamma(alpha,beta)
    mean[c] <- exp(mu[c]+sigma2[c]/2)-0.01
  }
}
"

dat$alpha = alpha
dat$beta  = beta
dat$m = m
dat$C = C
dat$nc = nlevels(d$county)
dat$county = as.numeric(d$county)
m_indep = jags.model(textConnection(independence_model), dat)
s_indep = coda.samples(m_indep, c("mu","sigma2","mean"), 1000)
@

<<independence_summary>>=
s_sum_mean <- summary(s_indep[,paste("mean[",1:nlevels(d$county),"]",sep="")])
s_sum_mean_df = as.data.frame(s_sum_mean$quantiles)

names(s_sum_mean_df) = paste("q",gsub("%","",names(s_sum_mean_df)),sep="")
s_sum_mean_df$county = levels(d$county)
library(ggplot2)
ggplot(s_sum_mean_df, aes(x=q2.5, xend=q97.5, y=county, yend=county))+geom_segment()+coord_cartesian(xlim=c(0,35))+geom_vline(x=4,col=2)
@

\item A hierarchical model for mean radon concentrations in the counties.

\paragraph{Solution:}

The hierarchical model is the same as the independence model, but the hyperparameters are learned rather than set. A model is 
\begin{align*}
Y_i &\stackrel{iid}{\sim} N(\mu_{c[i]}, \sigma_{c[i]}^2) \\
\mu_{c[i]} &\stackrel{iid}{\sim} N(\eta, \tau^2) \\
\sigma^2_{c[i]} &\stackrel{iid}{\sim} Ga(\nu/2,\nu \eta^2/2) \\
\eta &\sim N(0,1) \\
\tau^2& \sim Ga(1,1) \\
\nu & \sim Exp(1) \\
\eta^2 & \sim Exp(1) 
\end{align*}

<<hierarchical_model>>=
hier_model = "
model {
  for (i in 1:n) {
    y[i] ~ dnorm(mu[county[i]], 1/sigma2[county[i]])
  }

  for (c in 1:nc) {
    mu[c] ~ dnorm(eta,1/tau2)
    sigma2[c] ~ dgamma(nu/2,nu*eta2/2)
    mean[c] <- exp(mu[c]+sigma2[c]/2)-0.01
  }
  eta ~ dnorm(0,.01)
  tau2 ~ dgamma(.01,.01)
  nu ~ dexp(0.1)
  eta2 ~ dexp(0.1)
}
"

hier_dat = list(n=nrow(d), y=d$y, nc=nlevels(d$county), county=as.numeric(d$county))
hier_m = jags.model(textConnection(hier_model), hier_dat)
hier_r = coda.samples(hier_m, c("mu","sigma2","mean","eta","tau2","nu","eta2"), 1000)
plot(hier_r[,c("eta","tau2","nu","eta2")])
@

Posterior 95\% credible intervals for the mean in each county are given below.

<<hierarchical_summary>>=
hier_sum_mean <- summary(hier_r[,paste("mean[",1:nlevels(d$county),"]",sep="")])
hier_sum_mean_df = as.data.frame(hier_sum_mean$quantiles)

names(hier_sum_mean_df) = paste("q",gsub("%","",names(hier_sum_mean_df)),sep="")
hier_sum_mean_df$county = levels(d$county)
library(ggplot2)
ggplot(hier_sum_mean_df, aes_string(x="q2.5", xend="q97.5", y="county", yend="county"))+geom_segment()+geom_vline(x=4,col=2)+coord_cartesian(xlim=c(0,35))
@

Notice that the uncertainty in the mean radon levels is much less than observed in the independence model. 

<<hyperparameters>>=
plot(hier_r)
@

\end{enumerate}

Finally, provide a plot or posterior predictive pvalue to determine whether it is reasonable to ignore {\tt floor} using the techniques from chapter 6.



\end{document}
